{
    "contents" : "#################\n# Purpose:\n# to explore the events log for module CMPST_0699 Semester 3 2014/15\n# I'm looking to be able to 'plot' the course to provide a background \n#  a) advice for students of current cohort and \n#  b) personal performance of individuals this time against historical\n#\n#################\n\n\nrm(list=ls())\n\nsetwd('d:/Working Analytics')\ngetwd()\n\n####\n# to start with I want to get a list of student ids from the cohort - I only want those who passed the essay\n# this file has results data for the module\n####\n\nusers <- read.csv('CMPST_00699 essay data.csv')\ntotalstu<-nrow(users)\n#totalstu\nusers <- subset(users, users$E.MARK > 40, select=c(EID, E.MARK)) # I dont need all of the vectors\n#head(users)\npassstu<-nrow(users)  # i will use this as an indication of relevant events - I'm thinking 10%\n#passstu\n####\n# now I have that list I can right join with the events for this course to filter only those users events in the list\n####\n\nevents <- read.csv('FROZEN - cmpst_00699 as at 26 Feb 2015.csv')  ## events for cmpst_0600 (cut down)\nevents <- merge(events, users, by='EID', all.y=T)\n# head(events)\n\n####\n# I'm not interested in lots of the events - there are so few or meaningless. Subsetting can remove\n####\n\nevents <- subset(events, events$EVENT != 'pres.end') \nevents <- subset(events, events$EVENT != 'messages.delete') \nevents <- subset(events, events$EVENT != 'messages.movedtodeletefolder') \nevents <- subset(events, events$EVENT != 'messages.newfolder') \nevents <- subset(events, events$EVENT != 'msnd.email.send') \nevents <- subset(events, events$EVENT != 'content.new')\n\nevents$EVENT <- factor(events$EVENT)    # refactoring gets rid of empty levels \nevents$EID <- factor(events$EID)        # and ids not used\n\n####\n# I need to rename a number of events for easier reading when plotting later\n####\n\nlevels(events$EVENT)[levels(events$EVENT)==\"asn.read.assignment\"] <- \"Assign.Read\"\nlevels(events$EVENT)[levels(events$EVENT)==\"asn.read.submission\"] <- \"Assign.Results\"\nlevels(events$EVENT)[levels(events$EVENT)==\"melete.section.read\"] <- \"Pathway.Read\"\nlevels(events$EVENT)[levels(events$EVENT)==\"asn.submit.submission\"] <- \"Assign.Submit\"\nlevels(events$EVENT)[levels(events$EVENT)==\"messages.forward\"] <- \"Mess.Forward\"\nlevels(events$EVENT)[levels(events$EVENT)==\"messages.reply\"] <- \"Mess.Reply\"\nlevels(events$EVENT)[levels(events$EVENT)==\"messages.read\"] <- \"Mess.Read\"\nlevels(events$EVENT)[levels(events$EVENT)==\"messages.new\"] <- \"Mess.New\"\nlevels(events$EVENT)[levels(events$EVENT)==\"chat.new\"] <- \"Chat.New\"\nlevels(events$EVENT)[levels(events$EVENT)==\"forums.read\"] <- \"Forum.Read\"\nlevels(events$EVENT)[levels(events$EVENT)==\"forums.response\"] <- \"Forum.Reply\"\nlevels(events$EVENT)[levels(events$EVENT)==\"forums.new\"] <- \"Forum.Post\"\nlevels(events$EVENT)[levels(events$EVENT)==\"content.read\"] <- \"Resource.Read\"\n\n# combine two\n\nlevels(events$EVENT)[levels(events$EVENT)==\"pres.begin\"] <- \"Join site\"\nlevels(events$EVENT)[levels(events$EVENT)==\"site.upd\"] <- \"Join site\"\n\n\n####\n# some playing around understanding how I can extract information from a table\n####\n\n#mytable <- table(events$EVENT, events$EID) # events against users contingency table\n#margin.table(mytable,1) # row marginal frequencies\n#margin.table(mytable,2) # column marginal frequencies\n#prop.table(mytable)  # cell percentage\n#round(prop.table(mytable,1),2) # row percentages\n#round(prop.table(mytable,2),2) # column percentages\n#ftable(mytable)  #pretty(ish) display\n\n####\n# crosstabs let me compare events by user\n####\n\nmyxtab <- xtabs(~EVENT+EID, data=events) # creates a crosstab\nstr(myxtab)\n\nlibrary(RColorBrewer) # nice colour palette stuff\nsomecols<-brewer.pal(15, \"Set3\")\n\nbarplot(myxtab, \n        xlab=\"Freq.\", \n        #ylab=\"User\", \n        las=2,  # vertical labels at bottom\n        legend=T,\n        horiz=T,\n        col=somecols   \n        #col=unique(myxtab)\n        )\n\n####\n# jiggery pokery here turns the xtab into a flat table\n# then to a data.frame\n# which I can use for plots\n####\n\nmyft <- ftable(myxtab) # makes a flat table, works with contingency or other tables\n#myft\n\n####\n# myft is a table cross matching user by event individual cells showing the frequency of events\n####\n\nmydfft <- as.data.frame(myft) # converting to a data.frame offers  more precision\n#mydfft\n\n\n\n####\n# mydfft is now a list of every event by every user with a Freq count \n####\n\n#plot(mydfft$EVENT, \n#     mydfft$Freq, \n#     las=2) ## plots EVENTS against frequency \n\n\n\n\n####\n# printing sorted boxplot for events \n####\n\n# organise by median of each event frequency - it just works!\nmydf2 <- with(mydfft,factor(EVENT,levels=levels(EVENT)[order(tapply(Freq,EVENT,median))])) \n\n\npar(mar=c(5,9,3,1))   # margins\nboxplot(mydfft$Freq~mydf2, \n        mydfft$EVENT, \n        las=2, \n        col='lightgray',\n        horizontal=T,\n        staplewex=1,\n        outline=F,                    # outline=FALSE removes individual marks to make it fit \n        main=\"Boxplot of student activity\") \n\n# i want to add labels of median, lower, upper\n# so i need the values underlying th plot\n\nthisplot <- boxplot(mydfft$Freq~mydf2, \n                    mydfft$EVENT, \n                    horizontal=T,\n                    outline=F,                    # outline=FALSE removes individual marks to make it fit \n                    plot=F) \n#thisplot\n\n\n# i am here just creating a simple table to show boxplot values\nmydisttable <- thisplot$stats\ncolnames(mydisttable) <- thisplot$names\nrownames(mydisttable) <- c('min','25%', 'median','75%', 'max')\n#mydisttable\n\ndf.table<-as.data.frame(mydisttable)\n#df.table\n\n# save values for suture fastbuild\nwrite.csv(df.table,file='SEM1 dftable.csv')\nwrite.csv(mydfft,file='SEM1 dfft.csv')\nwrite.csv(myxtab,file='SEM1 event~EID xtab.csv')\n\n",
    "created" : 1427143578461.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1233533757",
    "id" : "A3E90106",
    "lastKnownWriteTime" : 1427144074,
    "path" : "E:/data/GitHub/Analytics-ISL-Project/treatment for semester one.R",
    "project_path" : "treatment for semester one.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}